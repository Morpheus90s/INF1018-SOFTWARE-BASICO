Relatório 1

Objetivo: Aprender a compilar programas no Linux usando gcc e ver como diferentes tipos de variáveis são armazenados na memória.

Exercício 1 – ex1.c 

Pergunta: Por que seu programa não foi encontrado?

R: Porque o terminal não procura automaticamente o programa na pasta atual. Quando digitei só ex1, ele não encontrou. 
Para rodar, precisa usar ./ex1, que indica “rode apartir daqui”

Exercício 2 – ex2.c 

Pergunta: O que aconteceu? O que mudou?

R: O programa rodou normalmente. Nesse caso, a função foo estava declarada no cabeçalho só em outro arquivo,
então o compilador sabia como usar a função corretamente

Exercício 3 – ex3.c 

Pergunta: O que aconteceu? O que mudou?
R: Quando compilei sem o cabeçalho da função foo, o compilador mostrou warnings e o resultado do programa saiu errado.
Isso porque o compilador não tinha informação suficiente sobre a função.

Exercício 4 – ex4.c 

Pergunta: O que você pode concluir sobre o armazenamento das variáveis c e i, e do vetor v?

R: Cada variável ocupa um espaço diferente na memória.
c1 - ocupa 1 byte
c2 - ocupa 1 byte (valor ASCII de '1')
i - ocupa vários bytes (normalmente 4)
v - array de char (string), ocupa vários bytes seguidos e termina com \0